xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low", color = "pink"), fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate", color = "darkgreen"), fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High", color = "orange"), fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low", color = "blue"), fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate", color = "darkgreen"), fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High", color = "orange"), fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low", color = "orange"), fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate", color = "darkgreen"), fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High", color = "orange"), fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low", color = "orange"), fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate", color = "darkgreen"), fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High", color = "pink"), fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low"), fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate"), color = "darkgreen", fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High"), fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low"), color = "pink", fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate"), color = "darkgreen", fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High"), color = "orange", fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low"), color = "red", fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate"), color = "darkgreen", fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High"), color = "orange", fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
subtitle = "Including Ranges of Daily Carb Intake based on Weigth"
x = "Daily Carb Intake",
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
subtitle = "Including Ranges of Daily Carb Intake based on Weigth",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low"), color = "red", fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate"), color = "darkgreen", fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High"), color = "orange", fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
subtitle = "Including Ranges of Daily Carb Intake (Based on Weigth)",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low"), color = "red", fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate"), color = "darkgreen", fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High"), color = "orange", fill = "white")
ggplot(ts.daily.carbs, aes(x = DailyCarbs)) +
geom_histogram(color = "black", fill = "royalblue", binwidth = 15) +
labs(title = "Daily Carbohydrate Intake Distribution",
subtitle = "Including Recommended Ranges of Daily Carb Intake (Based on Weigth)",
x = "Daily Carb Intake",
y = "Frequency") +
annotate("rect", fill = "pink",
xmin = lowmin, xmax = lowmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "darkgreen",
xmin = lowmax, xmax = midmax, ymin = 0, ymax = 18, alpha = .2) +
annotate("rect", fill = "orange",
xmin = midmax, xmax = highmax, ymin = 0, ymax = 18, alpha = .2) +
geom_label(aes(x = 150, y = 13, label = "Low"), color = "red", fill = "white") +
geom_label(aes(x = 250, y = 13, label = "Moderate"), color = "darkgreen", fill = "white") +
geom_label(aes(x = 400, y = 13, label = "High"), color = "orange", fill = "white")
View(df)
# Calculating average BG every day from CGM data
df |>
gg_season(BG)
View(ts.bg)
# Calculating average BG every day from CGM data
ts |>
gg_season(BG)
# Calculating average BG every day from CGM data
ts |>
fill_gaps() |>
gg_season(BG)
View(ts.bg)
str(ts.bg)
# Calculating average BG every day from CGM data
ts.bg |>
select(-c(Transmitter.ID)) |>
gg_season(BG)
View(ts.bg)
count_gaps(ts.bg)
fdsa
str(df)
# Calculating average BG every day from CGM data
df |>
select(Time, BG) |>
mutate(Time = as_datetime(Time)) |>
as_tsibble(index = BG,
index = Time) |>
gg_season(BG)
# Calculating average BG every day from CGM data
df |>
select(Time, BG) |>
mutate(Time = as_datetime(Time)) |>
as_tsibble(key = BG,
index = Time) |>
gg_season(BG)
# Calculating average BG every day from CGM data
df |>
select(Time, BG) |>
mutate(Time = as_datetime(Time)) |>
as_tsibble(key = BG,
index = Time) |>
fill_gaps() |>
gg_season(BG)
View(ts)
scan_gaps(ts)
str(ts)
count_gaps(ts)
str)ts
str(ts)
# Calculating average BG every day from CGM data
df |>
ggplot(aes(x=Time, y=BG)) +
geom_line()
# Calculating average BG every day from CGM data
df |>
mutate(Day = as_date(Time)) |>
ggplot(aes(x=Time, y=BG, group = Day, color = Day)) +
geom_line()
# Calculating average BG every day from CGM data
df |>
mutate(Day = as_date(Time)) |>
ggplot(aes(x=Time, y=BG, group = Day, color = Day)) +
geom_line()
time_length(df$Time[i])
# Calculating average BG every day from CGM data
df |>
mutate(Day = as_date(Time),
Hour = hour(Time),
Minute = minute(Time),
Second = minute(Time)) |>
mutate(Time_of_Day = paste(Hour, Minute, Second, sep = ":")) |>
ggplot(aes(x=Time_of_Day, y=BG, group = Day, color = Day)) +
geom_line()
# Calculating average BG every day from CGM data
df |>
mutate(Day_of_week = day.of.week(Time),
Week = week(Time)) |>
mutate(Time_of_Day = paste(Hour, Minute, Second, sep = ":")) |>
ggplot(aes(x=Day_of_week, y=BG, group = Week, color = Week)) +
geom_line()
# Calculating average BG every day from CGM data
df |>
mutate(Day_of_week = day.of.week(Time),
Week = week(Time)) |>
ggplot(aes(x=Day_of_week, y=BG, group = Week, color = Week)) +
geom_line()
# Calculating average BG every day from CGM data
df |>
mutate(Day_of_week = wday(Time),
Week = week(Time)) |>
ggplot(aes(x=Day_of_week, y=BG, group = Week, color = Week)) +
geom_line()
# Calculating average BG every day from CGM data
df |>
filter(exercise == 1) |>
ggplot(aes(x=Time, y = BG))
View(df)
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
ggplot(aes(x=Time, y = BG))
df |>
filter(Exercise == 1)
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
ggplot(aes(x=Time, y = BG)) +
geom_line()
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
ggplot(aes(x=Time, y = BG)) +
geom_line(aes(y=BG))
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
ggplot(aes(x=Time, y = BG)) +
geom_point(aes(y=BG)) +
geom_line(aes(y=BG))
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time)) |>
ggplot(aes(x=Time, y = BG, group = Day, color = Day)) +
geom_point(aes(y=BG)) +
geom_line(aes(y=BG))
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time)) |>
ggplot(aes(x=Time, y = BG, group = Day) color = Day) +
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time)) |>
ggplot(aes(x=Time, y = BG, group = Day, color = Day)) +
geom_point(aes(y=BG)) +
geom_line(aes(y=BG))
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time),
) |>
ggplot(aes(x=Time, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(s))) +
geom_line(aes(y = BG, color = factor(s)))
# Calculating average BG every day from CGM data
df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time),
) |>
ggplot(aes(x=Time, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day)))
str(df)
View(df)
# BG during exercise
df.bg_during_exercise <- df.bg |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time))
View(df)
# BG during exercise
df.bg_during_exercise <- df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time))
View(df.bg_during_exercise)
# BG during exercise
df.bg_during_exercise <- df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time)) |>
group_by(Day) |>
select(BG, Day, Time)
View(df.bg_during_exercise)
i =11
date = as_date(df.bg_during_exercise$Time[i])
date
df.bg_during_exercise$Time[1:16]
# Manipulating the time to "time from start of workout"
df.bg_during_exercise$Minutes[1:16] <- seq(from = as.POSIXct("00:00:00"),
to = as.POSIXct("00:01:20"), by="5min")
# Manipulating the time to "time from start of workout"
df.bg_during_exercise$Minutes[1:16] <- seq(from = as.POSIXct("00:00:00"),
to = as.POSIXct("01:20:00"), by="5min")
# Manipulating the time to "time from start of workout"
df.bg_during_exercise$Minutes[1:16] <- format(seq.POSIXt(as.POSIXct(Sys.Date()), as.POSIXct(Sys.Date()+1), by = "5 min"),
"%H:%M:%S", tz="UTC")
View(df.bg_during_exercise)
# Manipulating the time to "time from start of workout"
df.bg_during_exercise$Minutes <- minute(df.bg_during_exercise$Time)
View(df.bg_during_exercise)
# BG during exercise
df.bg_during_exercise <- df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time),
Hour = hour(Time),
Minute = minute(Time),
TimeSpent = paste(Hour, Minute)) |>
group_by(Day) |>
select(BG, Day, TimeSpent)
View(df.bg_during_exercise)
# BG during exercise
df.bg_during_exercise <- df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time),
Hour = hour(Time),
Minute = minute(Time),
TimeSpent = paste(Hour, Minute, sep = ":")) |>
group_by(Day) |>
select(BG, Day, TimeSpent)
View(df.bg_during_exercise)
# BG during exercise
df.bg_during_exercise <- df |>
filter(Exercise == 1) |>
mutate(Day = as_date(Time),
Hour = hour(Time),
Minute = minute(Time),
TimeSpent = paste(Hour, Minute, "00", sep = ":")) |>
group_by(Day) |>
select(BG, Day, TimeSpent)
View(df.bg_during_exercise)
str(df.bg_during_exercise)
format(Sys.time(), "%Hh:%Mm:%Ss")
format(seq.POSIXt(as.POSIXct(Sys.Date()), as.POSIXct(Sys.Date()+1), by = "5 min"),
"%H%M", tz="UTC")
format(seq.POSIXt(as.POSIXct(Sys.Date()), as.POSIXct(Sys.Date()+1), by = "5 min"),
"%H:%M", tz="UTC")
# Manipulating the time to "time from start of workout"
time_vector <- format(seq.POSIXt(as.POSIXct(Sys.Date()),
as.POSIXct(Sys.Date()+1),
by = "5 min"),
"%H:%M", tz="UTC")
time_vector[1:16]
df.bg_during_exercise$Minutes[1:16] <- time_vector[1:16]
df.bg_during_exercise$TimeSpent[1:16] <- time_vector[1:16]
View(df.bg_during_exercise)
df.bg_during_exercise$TimeSpent[17:26] <- time_vector[1:9]
df.bg_during_exercise$TimeSpent[17:26] <- time_vector[1:10]
View(df.bg_during_exercise)
df.bg_during_exercise$TimeSpent[27:38] <- time_vector[1:12]
df.bg_during_exercise$TimeSpent[39:47] <- time_vector[1:9]
View(df.bg_during_exercise)
df.bg_during_exercise$TimeSpent[48:55] <- time_vector[1:8]
View(df.bg_during_exercise)
View(df.bg_during_exercise)
# Plotting
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day)))
str(df.bg_during_exercise)
df.bg_during_exercise <- as.data.frame(df.bg_during_exercise)
# Plotting
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day)))
# Plotting
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day)))
# Plotting
df.bg_during_exercise |>
mutate(Minutes = as.numeric(TimeSpent)) |>
ggplot(aes(x=Minutes, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day)))
# Plotting
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day)))
?scale_x_datetime
# Plotting
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
scale_x_datetime()
# Plotting
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day)))
str(df.bg_during_exercise)
# Plotting
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Time Spent Exercising",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2)
# Plotting
xmin <- df.bg_during_exercise$TimeSpent[1]
xmax <- df.bg_during_exercise$TimeSpent[16]
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Time Spent Exercising",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2)
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Length of Exercise",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2) +
scale_x_datetime(date_labels = "%H:%M")
df.bg_during_exercise |>
mutate(TimeSpent = as.POSIXct(TimeSpent)) |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Length of Exercise",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2)
POSIXct(df.bg_during_exercise$TimeSpent)
df.bg_during_exercise$TimeSpent
as_datetime(df.bg_during_exercise$TimeSpent)
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Length of Exercise",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2)
View(df.bg_during_exercise)
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Length of Exercise",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2) +
scale_x_continuous(breaks=c(0,2,4,6,8),labels=c("00:15","00:30","00:45","01:00","01:15"))
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Length of Exercise",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2) +
scale_x_discrete(breaks=c(0,2,4,6,8),labels=c("00:15","00:30","00:45","01:00","01:15"))
df.bg_during_exercise |>
ggplot(aes(x=TimeSpent, y = BG, group = Day, color = Day)) +
geom_point(aes(y = BG, color = factor(Day))) +
geom_line(aes(y = BG, color = factor(Day))) +
labs(title = "Blood Glucose While Exercising",
x = "Length of Exercise",
y = "BG (mg/dL)") +
annotate("rect", xmin = xmin, xmax = xmax, ymin = 70, ymax = 180,
alpha = .2) +
scale_x_discrete(breaks=c("00:15","00:30","00:45","01:00","01:15"),
labels=c("00:15","00:30","00:45","01:00","01:15"))
